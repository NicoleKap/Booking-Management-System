package com.eap.plh24;

import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class BookingManagementMain {
    static List<Property> allProperties;
    static List<Reservation> reservationList;
    static List<BookingListener> bookingListeners;
    public static void main(String[] args) {
        //Δημιουργία πελατών
        //Τοποθέτηση των πελατών στη λίστα των ενδιαφερομένων

        //Δημιουργία Καταλυμάτων

        //Εκτύπωση κρατήσεων

        //Εκτύπωση συνολικού κόστους κρατήσεων πελατών

    }

    static void addBookingListener() {

    }
    //Η εν λόγω μέθοδος είναι υπεύθυνη για να ενημερώνει όλους τους ενδιαφερόμενους πελάτες για την προσθήκη ενός νέου καταλύματος στο σύστημα
    //Εάν στη μέθοδο αυτή βρεθεί ενδιαφερόμενος πελάτης, την ίδια στιγμή, πραγματοποιείται η κράτηση, κάνοντας κλήση
    //στη μέθοδο makeReservation, με τα στοιχεία του ενδιαφερόμενου πελάτη, καθώς και του καταλύματος
    static void notifyListeners(Property newEntry){

    }
    //Η εν λόγω μέθοδος είναι υπεύθυνη για την κράτηση ενός καταλύματος από έναν πελάτη. 
    //Για να πραγματοποιηθεί αυτό, θα πρέπει να βρεθεί πρώτα αν το κατάλυμα είναι ξενοδοχείο ή διαμέρισμα
    //και στη συνέχεια, για τις περιπτώσεις των ξενοδοχείων, αν υπάρχει διαθέσιμο δωμάτιο (παρότι, όπως θα αναλύεται παρακάτω, θα υπάρχει σίγουρα).
    //Με την πραγματοποίηση της κράτησης, η κράτηση διατηρείται στη λίστα reservationList
    //Σημείωση: Για λόγους της άσκησης, κάνουμε την παραδοχή ότι το κατάλυμα που μας ενδιαφέρει θα είναι σίγουρα διαθέσιμο.
    //Αυτό προκύπτει από τη λογική, ότι οι πελάτες ενημερώνονται με την ύπαρξη ενός νέου καταλύματος και το κλείνουν απευθείας.
    //Υπάρχει το ενδεχόμενο να έχουμε ένα ξενοδοχείο, όπου ο αριθμός των δωματίων να μην φτάσει να εξυπηρετήσει όλους τους ενδιαφερόμενους πελάτες.
    //Στη συγκεκριμένη περίπτωση δεν χρειάζεται να την υλοποιήσετε/ελέγξετε στο πλαίσιο της άσκησης. Αυτή προϋποθέτει τροποποίηση και της μεθόδου
    //isInterested, όπου έχουμε δεχθεί (ως παραδοχή) ότι η κράτηση θα πραγματοποιηθεί, οπότε έχει τροποποιηθεί κατάλληλα και λίστα του πελάτη.
    static boolean makeReservation(Reservation reservation){

    }
    //Στη μέθοδο αυτή θέλουμε σύμφωνα με τα δεδομένα της άσκησης, αλλά και σύμφωνα με την ενδεικτική εκτύπωση,
    //να εκτυπωθούν σε αρχείο και στην κονσόλα (System.out) οι κρατήσεις που έχουν γίνει στο σύστημα
    static void printReservations(){

    }
    //Η μέθοδος αυτή, υπολογίζει και εκτυπώνει το συνολικό κόστος των κρατήσεων που έχουν πραγματοποιηθεί στο σύστημα.
    //Θα χρησιμοποιήσετε τη λίστα reservationList.
    //θα πρέπει να ελέγξετε τον τύπο του καταλύματος της κράτησης, ώστε στην περίπτωση των ξενοδοχείων να συνυπολογίσετε τυχόν πρωινό,
    //ενώ στην περίπτωση των διαμερισμάτων τυχόν κήπο.
    //Επίσης, θα πρέπει να ελέγξετε πόσες κρατήσεις έχει κάνει ο κάθε πελάτης συνολικά στο σύστημα, ώστε να υπολογιστεί και τυχόν έκπτωση που δικαιούται
    static void calculateReservationCosts(){

    }

}
